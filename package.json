{
  "name": "vanilla",
  "version": "1.0.0",
  "description": "",
  "main": "index.js",
  "scripts": {
    "prebuild": "rimraf dist/*",
    "build": "for step in 'assets' 'js' 'css' 'mark' 'html'; do npm run build:$step; done",
    "build:assets": "cp -r assets/assets dist",
    "build:js": "cp assets/js/* dist",
    "build:css": "cp assets/css/* dist",
    "build:mark": "hashmark -c dist -r -l 6 'assets/**/*.*' '{dir}/{name}-{hash}{ext}' | replaceinfiles -S -s 'dist/*.css' -d '{dir}/{base}' && hashmark -s -c dist -r -l 6 '*.{css,js}' '{dir}/{name}-{hash}{ext}'",
    "build:html": "injectassets -s assets/html/index.html -o dist/index.html -d dist -g '*.{css,js}'",
    "test": "karma start --singleRun",
    "watch": "parallelshell \"npm run watch:test -s\" \"npm run watch:build -s\"",
    "watch:test": "karma start",
    "watch:build": "nodemon -q -w assets/ --ext '.' --exec 'npm run build'",
    "open:prod": "opener http://example.com",
    "open:stage": "opener http://staging.example.internal",
    "open:dev": "opener http://localhost:9090",
    "deploy:prod": "s3-cli sync ./dist/ s3://example-com/prod-site/",
    "deploy:stage": "s3-cli sync ./dist/ s3://example-com/stage-site/",
    "serve": "http-server -p 9090 dist/",
    "live-reload": "live-reload --port 9091 dist/",
    "dev": "npm run open:dev -s && parallelshell \"npm run live-reload -s\" \"npm run serve -s\" \"npm run watch -s\"",
    "dev:server": "node start.js"
  },
  "author": "",
  "license": "ISC",
  "devDependencies": {
    "browserify": "^12.0.1",
    "hashmark": "^3.1.0",
    "injectassets": "^1.0.2",
    "minifyify": "^7.1.0",
    "replaceinfiles": "^1.1.3",
    "rimraf": "^2.5.0"
  },
  "dependencies": {
    "express": "^4.13.3"
  }
}
